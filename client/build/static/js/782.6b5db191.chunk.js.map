{"version":3,"file":"static/js/782.6b5db191.chunk.js","mappings":"2RAIMA,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA2DF,EAzDgB,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,OAAQ,SAACC,EAAMC,GAAG,OAChB,SAAC,KAAI,CAACC,GAAE,sBAAiBD,EAAIE,YAAa,SAAEH,GAAY,GAG5D,CACEH,MAAO,WACPC,UAAW,CAAC,UAAW,SAKzB,CACED,MAAO,OACPC,UAAW,CAAC,aAAc,UAAW,SAEvC,CACED,MAAO,QACPC,UAAW,CAAC,aAAc,WAAY,UAExC,CACED,MAAO,OACPC,UAAW,MACXC,OAAQ,SAACC,GAAI,OACXA,EAAKI,KAAI,SAACC,GACR,IAAMC,EAAMD,EAAKE,WAAW,GAAKF,EAAKE,WAAWF,EAAKG,OAAS,GAC/D,OACE,SAAC,IAAG,CAACC,MAAO,CAAEC,MAAO,SAAWA,MAAOd,EAASU,EAAM,IAAI,SACvDD,GAGP,GAAE,GAEN,CACER,MAAO,aACPC,UAAW,CAAC,WAAY,QACxBC,OAAQ,SAACY,GAAI,OAAMA,GAAc,eAAe,GAElD,CACEd,MAAO,eACPC,UAAW,CAAC,WAAY,SACxBC,OAAQ,SAACY,GAAI,OAAMA,GAAc,eAAe,GAGlD,CACEd,MAAO,aACPC,UAAW,cAEb,CACED,MAAO,mBACPC,UAAW,qB,gECNf,EAlDiB,WACf,OAAyBc,EAAAA,EAAAA,UAAS,IAAG,eAA9BC,EAAK,KAAEC,EAAO,KACrB,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAC1B,GAA2BC,EAAAA,EAAAA,YAAWC,EAAAA,GAEhCC,GAFM,EAAJR,KAAc,EAARS,UACEC,EAAAA,EAAAA,OACCC,EAAAA,EAAAA,OAGTC,IAFOC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MACIN,EAAXI,QAoBR,OAlBAG,EAAAA,EAAAA,YAAU,WACRV,GAAW,GACXW,IAAAA,KACQC,EAAAA,EAAAA,UAAcC,EAAAA,EAAAA,GAAeN,IAClCO,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACRA,EAAIpB,KAAKuB,UACXF,QAAQC,IAAIF,EAAIpB,KAAKA,MACrBG,EAAQiB,EAAIpB,KAAKA,MACjBK,GAAW,GAEf,IACCmB,OAAM,SAACC,GACNpB,GAAW,GACXgB,QAAQC,IAAIG,EACd,GACJ,GAAG,CAACb,KAGF,8BACIR,GAcA,SAACsB,EAAA,EAAO,KAbR,iCACE,SAAC,IAAU,CAACxC,MAAM,cAClB,SAAC,IAAK,CACJkB,QAASA,EACTuB,QAASA,EACTC,UAAQ,EACRC,OAAQ,SAACzC,GAAM,OAAKA,EAAO0C,GAAG,EAC9BC,WAAY7B,EACZ8B,YAAU,EACVC,OAAQ,CAAEC,EAAG,YAQzB,C","sources":["Components/Services/columns.jsx","Components/Services/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { Tag } from \"antd\";\n// import tagColor from \"../../config/consts\";\nimport { Link } from \"react-router-dom\";\nconst tagColor = [\n  \"#ffa39e\",\n  \"#ffbb96\",\n  \"#ffd591\",\n  \"#ffe58f\",\n  \"#fffb8f\",\n  \"#eaff8f\",\n  \"#b7eb8f\",\n  \"#87e8de\",\n  \"#91d5ff\",\n  \"#adc6ff\",\n  \"#d3adf7\",\n  \"#ffadd2\",\n];\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    render: (text, row) => (\n      <Link to={`allServices/${row.service_id}`}>{text}</Link>\n    ),\n  },\n  {\n    title: \"Category\",\n    dataIndex: [\"typeObj\", \"name\"],\n    // render: (text, row) => (\n    //   <Link to={`college/${row._id}`}>{text.slice(0, text.length - 13)}</Link>\n    // ),\n  },\n  {\n    title: \"CIty\",\n    dataIndex: [\"addressObj\", \"newCity\", \"city\"],\n  },\n  {\n    title: \"State\",\n    dataIndex: [\"addressObj\", \"newState\", \"state\"],\n  },\n  {\n    title: \"Tags\",\n    dataIndex: \"tag\",\n    render: (text) =>\n      text.map((prop) => {\n        const num = prop.charCodeAt(0) + prop.charCodeAt(prop.length - 1);\n        return (\n          <Tag style={{ color: \"black\" }} color={tagColor[num % 11]}>\n            {prop}\n          </Tag>\n        );\n      }),\n  },\n  {\n    title: \"Owner name\",\n    dataIndex: [\"ownerObj\", \"name\"],\n    render: (data) => (data ? data : \"Not Specified\"),\n  },\n  {\n    title: \"Owner number\",\n    dataIndex: [\"ownerObj\", \"phone\"],\n    render: (data) => (data ? data : \"Not Specified\"),\n  },\n\n  {\n    title: \"Experience\",\n    dataIndex: \"experiance\",\n  },\n  {\n    title: \"Customers Served\",\n    dataIndex: \"customers_served\",\n  },\n];\n\nexport default columns;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { PageHeader, Table } from \"antd\";\nimport {\n  useHistory,\n  useParams,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport columns from \"./columns\";\nimport API from \"../../api\";\nimport Spinner from \"../Spinner\";\n\nimport { GlobalContext } from \"../../Context/GlobalContext\";\nimport { setUrlString, getArrayParams } from \"../../utils/paramsConvert\";\nimport axios from \"axios\";\nconst Services = () => {\n  const [datas, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { data, dispatch } = useContext(GlobalContext);\n  const history = useHistory();\n  const location = useLocation();\n  const params = useParams();\n  const router = useRouteMatch();\n  const { search } = location;\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .post(API.services, getArrayParams(search))\n      .then((res) => {\n        console.log(res);\n        if (res.data.success) {\n          console.log(res.data.data);\n          setData(res.data.data);\n          setLoading(false);\n        }\n      })\n      .catch((e) => {\n        setLoading(false);\n        console.log(e);\n      });\n  }, [search]);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <PageHeader title=\"Services\" />\n          <Table\n            loading={loading}\n            columns={columns}\n            bordered\n            rowKey={(render) => render._id}\n            dataSource={datas}\n            pagination\n            scroll={{ x: 1300 }}\n          />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default Services;\n"],"names":["tagColor","title","dataIndex","render","text","row","to","service_id","map","prop","num","charCodeAt","length","style","color","data","useState","datas","setData","loading","setLoading","useContext","GlobalContext","location","dispatch","useHistory","useLocation","search","useParams","useRouteMatch","useEffect","axios","API","getArrayParams","then","res","console","log","success","catch","e","Spinner","columns","bordered","rowKey","_id","dataSource","pagination","scroll","x"],"sourceRoot":""}